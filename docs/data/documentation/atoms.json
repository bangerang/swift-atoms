{"variants":[{"paths":["\/documentation\/atoms"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/Atoms\/documentation\/Atoms","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/Store"]},{"title":"Protocols","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/ReadableAtom","doc:\/\/Atoms\/documentation\/Atoms\/WritableAtom"]},{"title":"Structures","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","doc:\/\/Atoms\/documentation\/Atoms\/Atom","doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtom","doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtomPublisher","doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtomValue","doc:\/\/Atoms\/documentation\/Atoms\/DerivedAtom","doc:\/\/Atoms\/documentation\/Atoms\/GetSetAtom","doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublishedAtom","doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","doc:\/\/Atoms\/documentation\/Atoms\/TestStore","doc:\/\/Atoms\/documentation\/Atoms\/UseAtom","doc:\/\/Atoms\/documentation\/Atoms\/UseAtomValue","doc:\/\/Atoms\/documentation\/Atoms\/WillSetAtom"]},{"title":"Enumerations","identifiers":["doc:\/\/Atoms\/documentation\/Atoms\/AsyncState"]}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"Atoms","title":"Atoms","symbolKind":"module","role":"collection","modules":[{"name":"Atoms"}]},"hierarchy":{"paths":[[]]},"references":{"doc://Atoms/documentation/Atoms/ReadableAtom":{"role":"symbol","title":"ReadableAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReadableAtom"}],"abstract":[{"type":"text","text":"A protocol that represents a readable Atom with a value of a certain type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ReadableAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ReadableAtom"}],"url":"\/documentation\/atoms\/readableatom"},"doc://Atoms/documentation/Atoms/AsyncAtom":{"role":"symbol","title":"AsyncAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"AsyncAtom"},{"type":"text","text":" represents an asynchronous state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncAtom"}],"url":"\/documentation\/atoms\/asyncatom"},"doc://Atoms/documentation/Atoms/Atom":{"role":"symbol","title":"Atom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Atom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"Atom"},{"type":"text","text":" represents a state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Atom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Atom"}],"url":"\/documentation\/atoms\/atom"},"doc://Atoms/documentation/Atoms/WillSetAtom":{"role":"symbol","title":"WillSetAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WillSetAtom"}],"abstract":[{"type":"text","text":"A generic structure that conforms to the "},{"type":"codeVoice","code":"WritableAtom"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ResettableAtom"},{"type":"text","text":" protocols."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WillSetAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WillSetAtom"}],"url":"\/documentation\/atoms\/willsetatom"},"doc://Atoms/documentation/Atoms/GetSetAtom":{"role":"symbol","title":"GetSetAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GetSetAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"GetSetAtom"},{"type":"text","text":" represents a readable and writable state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/GetSetAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GetSetAtom"}],"url":"\/documentation\/atoms\/getsetatom"},"doc://Atoms/documentation/Atoms/CaptureAtomPublisher":{"role":"symbol","title":"CaptureAtomPublisher","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaptureAtomPublisher"}],"abstract":[{"type":"text","text":"A property wrapper that provides an "},{"type":"codeVoice","code":"AnyPublisher<T, Never>"},{"type":"text","text":" that emits the current value of the atom and any subsequent updates."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtomPublisher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaptureAtomPublisher"}],"url":"\/documentation\/atoms\/captureatompublisher"},"doc://Atoms/documentation/Atoms/PublishedAtom":{"role":"symbol","title":"PublishedAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublishedAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"PublishedAtom"},{"type":"text","text":" represents a readable state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" that comes from a "},{"type":"codeVoice","code":"Published"},{"type":"text","text":" property wrapper."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublishedAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublishedAtom"}],"url":"\/documentation\/atoms\/publishedatom"},"doc://Atoms/documentation/Atoms/CaptureAtomValue":{"role":"symbol","title":"CaptureAtomValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaptureAtomValue"}],"abstract":[{"type":"text","text":"A property wrapper that captures the atom’s value and provides read-only access without being reactive to changes."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtomValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaptureAtomValue"}],"url":"\/documentation\/atoms\/captureatomvalue"},"doc://Atoms/documentation/Atoms/AtomStore":{"role":"symbol","title":"AtomStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomStore"}],"abstract":[{"type":"codeVoice","code":"AtomStore"},{"type":"text","text":" is responsible for injecting mutation closures into the store and enabling logging for "},{"type":"codeVoice","code":"Atom"},{"type":"text","text":" operations. It provides a shared singleton instance for convenient access throughout your application."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AtomStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AtomStore"}],"url":"\/documentation\/atoms\/atomstore"},"doc://Atoms/documentation/Atoms/DerivedAtom":{"role":"symbol","title":"DerivedAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivedAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"DerivedAtom"},{"type":"text","text":" represents a derived state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/DerivedAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DerivedAtom"}],"url":"\/documentation\/atoms\/derivedatom"},"doc://Atoms/documentation/Atoms/TestStore":{"role":"symbol","title":"TestStore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"abstract":[{"type":"text","text":"A test store for running isolated operations on a separate "},{"type":"codeVoice","code":"Store"},{"type":"text","text":" instance."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/TestStore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/atoms\/teststore"},"doc://Atoms/documentation/Atoms/CaptureAtom":{"role":"symbol","title":"CaptureAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaptureAtom"}],"abstract":[{"type":"text","text":"A property wrapper that captures the atom’s value and provides read and write access without being reactive to changes."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/CaptureAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CaptureAtom"}],"url":"\/documentation\/atoms\/captureatom"},"doc://Atoms/documentation/Atoms/WritableAtom":{"role":"symbol","title":"WritableAtom","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"WritableAtom"}],"abstract":[{"type":"text","text":"A protocol that represents a writable Atom with a value of a certain type "},{"type":"codeVoice","code":"T"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/WritableAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WritableAtom"}],"url":"\/documentation\/atoms\/writableatom"},"doc://Atoms/documentation/Atoms/AsyncState":{"role":"symbol","title":"AsyncState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncState"}],"abstract":[{"type":"text","text":"An enum representing the state of an asynchronous operation."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncState"}],"url":"\/documentation\/atoms\/asyncstate"},"doc://Atoms/documentation/Atoms/ObservableObjectAtom":{"role":"symbol","title":"ObservableObjectAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObjectAtom"}],"abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"ObservableObjectAtom"},{"type":"text","text":" represents a readable state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" that conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/ObservableObjectAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObjectAtom"}],"url":"\/documentation\/atoms\/observableobjectatom"},"doc://Atoms/documentation/Atoms/PublisherAtom":{"role":"symbol","title":"PublisherAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublisherAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"PublisherAtom"},{"type":"text","text":" represents a readable state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" that comes from a "},{"type":"codeVoice","code":"Publisher"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/PublisherAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PublisherAtom"}],"url":"\/documentation\/atoms\/publisheratom"},"doc://Atoms/documentation/Atoms/UseAtomValue":{"role":"symbol","title":"UseAtomValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseAtomValue"}],"abstract":[{"type":"text","text":"A property wrapper that provides read-only access to the atom’s value, and it’s reactive to changes."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UseAtomValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UseAtomValue"}],"url":"\/documentation\/atoms\/useatomvalue"},"doc://Atoms/documentation/Atoms/UseAtom":{"role":"symbol","title":"UseAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UseAtom"}],"abstract":[{"type":"text","text":"A property wrapper that provides read and write access to the atom’s value, and it’s reactive to changes."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/UseAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UseAtom"}],"url":"\/documentation\/atoms\/useatom"},"doc://Atoms/documentation/Atoms/Store":{"role":"symbol","title":"Store","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Store"}],"abstract":[{"type":"codeVoice","code":"Store"},{"type":"text","text":" manages the state of all atoms and their dependencies."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/Store","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Store"}],"url":"\/documentation\/atoms\/store"},"doc://Atoms/documentation/Atoms":{"role":"collection","title":"Atoms","abstract":[],"identifier":"doc:\/\/Atoms\/documentation\/Atoms","kind":"symbol","type":"topic","url":"\/documentation\/atoms"},"doc://Atoms/documentation/Atoms/AsyncSequenceAtom":{"role":"symbol","title":"AsyncSequenceAtom","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncSequenceAtom"}],"abstract":[{"type":"text","text":"A generic "},{"type":"codeVoice","code":"AsyncSequenceAtom"},{"type":"text","text":" represents an asynchronous state for a given value of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" while iterating through an "},{"type":"codeVoice","code":"AsyncSequence"},{"type":"text","text":"."}],"identifier":"doc:\/\/Atoms\/documentation\/Atoms\/AsyncSequenceAtom","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AsyncSequenceAtom"}],"url":"\/documentation\/atoms\/asyncsequenceatom"}}}